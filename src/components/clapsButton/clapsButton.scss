@use "../../css/utils.scss" as *;
@use "../../css/icons.scss" as *;
@use "../../css/animation.scss" as *;
@use "./confetti.scss";

.clapsButton {
  --icon-size: 1.4rem;
	@include buttonReset;
	justify-self: start;
	display: flex;
	grid-area: claps;
	flex-wrap: wrap;
	//gap: 0.3125rem;
	position: relative;
	justify-content: center;
	span {
		display: flex;
		align-items: center;
	}
  &Bubble{
    background-color: black;
    color: white;
    width: 2rem;
    height: 2rem;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: toRem(12);
    aspect-ratio: 1;
    position: absolute;
    inset-block-start: 0;
    transform: translateY(0);
    opacity: 0;
    &::after{
      content: "";
      display: block;
      position: absolute;
      inset-block-end: 0;
      transform: translateY(calc(100% - 2px));
      border-color: black transparent transparent transparent;
      border-style: solid;
      border-width: 7px;
    }
  }
	&Label {
		position: relative;
		&::before,
		&::after {
			@include icon;
			@extend %icon-clap;
			display: block;
			font-size: var(--icon-size);
      transform-origin: center;
		}
		&::before {
      @extend %icon-clap-bold;
			opacity: 0;
		}
		&::after {
			position: absolute;
			inset: 0 0;
		}
		&Title {
			@include srOnly;
		}
	}
	&Amount {
		position: relative;
		text-align: center;
		display: flex;
		justify-content: center;
		&Abbreviated, &Total{
			padding: 0.3125rem;
		}
		&Abbreviated {
			position: absolute;
		}
		&Total {
			opacity: 0;
			background: grey;
			color: white;
			border-radius: 1rem;
		}
	}
	&[aria-pressed="true"] {
    animation-duration: 1.6s; // same as clapBubbleUp, which allows for JS's "animationend" event to be used
    animation-name: clapTotal;
		.clapsButtonLabel::before {
			animation-name: clap, fadeOut;
      animation-duration: 0.5s;
			animation-timing-function: $easeOutBack;
		}
		.clapsButtonBubble {
      animation: clapBubbleUp;
      animation-duration: 1s;
      animation-delay: 0.6s;
			animation-timing-function: ease-out;
		}
	}
}

@keyframes clapTotal{
  from{
    transform: translateY(0);
  }
  to{
    transform: translateY(0);
  }
}

@keyframes clapBubbleUp {
	from {
		transform: translateY(0);
    opacity: 0;
	}
  50% {
    opacity: 1;
  }
	75% {
		transform: translateY(-150%);
	}
  100%{
    transform: translateY(-200%);
    opacity: 0;
  }
}

@keyframes clap {
	from {
		transform: scale(1);
	}
	10% {
		color: var(--color-pink-main);
	}
	to {
		transform: scale(2);
	}
}