@use "sass:math";

[data-is="confetti"] {
  --duration: 0.3s;
  --translation: 50px;
  --target-scale: 0.2;
  width: 100%;
  height: 100%;
  position: absolute;
  inset: 0;
  //animation-timing-function: ease-in;
  animation-iteration-count: 1;
  animation-duration: var(--duration);
  transform-origin: center center;
  pointer-events: none;
  & > span {
    // set from javascript
    --angle: 0deg;
    --destination: 0px;
    border-left: 4px solid transparent;
    border-right: 4px solid transparent;
    border-top: 10px solid red;
    border-bottom: 4px solid transparent;
    position: absolute;
    inset-block-start: calc(50% - 12px);
    inset-inline-start: calc(50% - 6px);
    animation-timing-function: inherit;
    animation-iteration-count: inherit;
    animation-duration: inherit;
    transform-origin: center bottom;
    animation-name: confettiExplode;
    opacity: 0;
    &::before {
      content: "";
      width: 5px;
      height: 5px;
      background: #03a87c;
      position: absolute;
      left: -15px;
      top: 0;
    }
  }
  @for $n from 5 through 11 {
    &.has-#{$n} {
      $angleFraction: math.div(360, $n);
      @for $i from 1 through $n {
        & > span:nth-child(#{$i}) {
          $angle: $angleFraction * $i * 1deg;
          --base-angle: #{$angle};
          transform: rotate($angle);
        }
      }
    }
  }
}

@keyframes confettiExplode {
  0% {
    transform: rotate(calc(var(--base-angle) + var(--angle))) translate(0, 0)
      scaleY(1);
    opacity: 0;
  }
  20% {
    opacity: 1;
  }
  100% {
    transform: rotate(calc(var(--base-angle) + var(--angle)))
      translate(0, calc((var(--translation) + var(--destination)) * -1))
      scaleY(var(--target-scale));
    opacity: 0;
  }
}
